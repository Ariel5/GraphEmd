suppressMessages(require(igraph))
suppressMessages(require(leiden))
suppressMessages(require(R.matlab))
Z=readMat("C:/Work/Applications/GitHub/Phone.mat");
Edge=Z$Edge;
A=graph_from_edgelist(Edge[,1:2]);
#Z=cluster_leiden(A,weights=Edge[,3]);
Z=leiden(A,weights=Edge[,3]);
Y=leiden(A,weights=Edge[,3], partition_type='CPMVertexPartition',resolution_parameter=10);
max(Y)
Y=leiden(A,weights=Edge[,3], partition_type='CPMVertexPartition',resolution_parameter=0.1);
max(Y)
Y=leiden(A,weights=Edge[,3], partition_type='CPMVertexPartition',resolution_parameter=1);
max(Y)
Y=leiden(A,weights=Edge[,3], resolution_parameter=1);
max(Y)
Y=leiden(A,weights=Edge[,3], resolution_parameter=10);
max(Y)
Y=leiden(A,weights=Edge[,3], resolution_parameter=0.1);
max(Y)
Y=leiden(A,weights=Edge[,3], resolution_parameter=0.01);
max(Y)
Y=leiden(A,weights=Edge[,3], resolution_parameter=0.00001);
max(Y)
Y=leiden(A,weights=Edge[,3], partition_type='ModularityVertexPartition',resolution_parameter=1);
max(Y)
Y=leiden(A,weights=Edge[,3], partition_type='ModularityVertexPartition',resolution_parameter=0.001);
max(Y)
Y=leiden(A,weights=Edge[,3],resolution_parameter=10,n_iterations=5);
max(Y)
Y=leiden(A,weights=Edge[,3],resolution_parameter=1,n_iterations=5);
max(Y)
Y=leiden(A,weights=Edge[,3],resolution_parameter=-5,n_iterations=5);
max(Y)
Y=leiden(A,weights=Edge[,3],resolution_parameter=1,n_iterations=5);
max(Y)
Y1=Y;
write.csv(Y1,"C:/Work/Applications/GitHub/PhoneL.csv", row.names = FALSE)
