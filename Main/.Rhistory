n <- sum(nrho)
set.seed(12345)
B <- rbind(c(.1,.01,.05,.05,.05),
c(.01,.1,.025,.05,.05),
c(.05,.025,.15,.05,.05),c(.05,.025,.025,.1,.05),c(.05,.025,.05,.025,.15))
rho <- rep(1/5,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
n <- 300
K <- 5
nrho <- rep(n, K)
n <- sum(nrho)
set.seed(12345)
B <- rbind(c(.1,.01,.05,.05,.05),
c(.01,.1,.025,.05,.05),
c(.05,.025,.15,.05,.05),c(.05,.05,.05,.1,.05),c(.05,.05,.05,.05,.15))
rho <- rep(1/5,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
X=as.matrix(get.data.frame(g));
result=GraphEncoder(X);
result=GraphEncoder(X,[2:10]);
result=GraphEncoder(X,c(2:10);
result=GraphEncoder(X,c(2:10));
result$meanSS
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R', encoding = 'UTF-8')
# Build a 3-SBM
n <- 150
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
set.seed(1234)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 150
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
set.seed(1234)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 150
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
set.seed(1234)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 150
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
set.seed(1234)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 150
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
set.seed(1234)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R', encoding = 'UTF-8')
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 150
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 150
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 150
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 150
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 150
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 150
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 150
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 150
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 150
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 150
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 150
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 150
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 150
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
result=GraphEncoder(as.matrix(get.data.frame(g)))
result=GraphEncoder(as.matrix(get.data.frame(g)))
result=GraphEncoder(as.matrix(get.data.frame(g)))
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 150
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
result=GraphEncoder(as.matrix(get.data.frame(g)))
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 150
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
result=GraphEncoder(as.matrix(get.data.frame(g)))
result=GraphEncoder(as.matrix(get.data.frame(g)))
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 150
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 150
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 150
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 150
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R', encoding = 'UTF-8')
result=GraphEncoder(as.matrix(get.data.frame(g)))
result=GraphEncoder(as.matrix(get.data.frame(g)))
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R', encoding = 'UTF-8')
result=GraphEncoder(as.matrix(get.data.frame(g)))
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R', encoding = 'UTF-8')
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 200
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R', encoding = 'UTF-8')
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 250
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 250
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 250
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 250
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 250
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 250
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 250
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R', encoding = 'UTF-8')
# Build a 3-SBM
n <- 250
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R', encoding = 'UTF-8')
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 250
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
# Build a 3-SBM
n <- 250
K <- 3
nrho <- rep(n, K)
n <- sum(nrho)
B <- rbind(c(.1,.01,.05),
c(.01,.1,.025),
c(.05,.025,.15))
rho <- rep(1/3,K)
Y <- rep(1:K, each=n/K)
g <- sample_sbm(n, B, nrho); #summary(g)
V(g)$name <- 1:vcount(g); V(g)$color <- Y; summary(g)
result=GraphEncoder(as.matrix(get.data.frame(g)))
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R', encoding = 'UTF-8')
result=GraphEncoder(as.matrix(get.data.frame(g)))
