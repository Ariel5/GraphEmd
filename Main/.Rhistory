Z=matrix(1, nrow = 5, ncol = 2)
View(Z)
View(Z)
View(Z)
View(Z)
Z[1,1]=0;
Z[1,2]=0;
Z[2,2]=3;
znorm=rownorms(Z);
znorm=rowNorms(Z);
require(ExPosition)
znorm=rowNorms(Z);
install.packages("ExPosition")
require(ExPosition)
znorm=rowNorms(Z);
View(znorm)
View(znorm)
znorm=rowNorms(Z,scale=TRUE);
znorm=rowNorms(Z,type=z,scale=TRUE);
znorm=rowNorms(Z,type='z',scale=TRUE);
Z
znorm=rowNorms(Z,type='z');
znorm=rowNorms(Z,type='z',center=FALSE);
normalize.rows(Z, method = "euclidean", p = 2)
install.packages("wordspace")
require(wordspace)
normalize.rows(Z, method = "euclidean", p = 2)
normalize.rows(Z, method = "euclidean", p = 2,tol = 0)
normalize.rows(Z, method = "euclidean", p = 2,tol = 1e-6)
normalize.rows(Z, method = "euclidean", p = 2, …,
tol = 1e-6, inplace = FALSE)
normalize.rows(Z, method = "euclidean", p = 2, …, tol = 1e-6, inplace = FALSE)
normalize.rows(Z, method = "euclidean", p = 2, tol = 1e-6)
Z=normalize.rows(Z, method = "euclidean", p = 2);
Z[is.na(Z)] = 0
Z
library(readr)
cora_edges <- read_csv("C:/Work/Applications/GitHub/GraphNN/Data/Cora/cora edges.csv",
col_names = FALSE)
View(cora_edges)
edge=as.matrix(cora_edges);
library(readr)
cora_node_labels <- read_csv("C:/Work/Applications/GitHub/GraphNN/Data/Cora/cora node_labels.csv",
col_names = FALSE)
View(cora_node_labels)
Y=as.matrix(cora_node_labels)
source(".../GraphEncoder.R")
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R', encoding = 'UTF-8')
result=GraphEncoder(Edge,Y);
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(Edge,Y);
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(Edge,Y);
result=GraphEncoder(edge,Y);
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(edge,Y);
result=GraphEncoder(edge,Y);
result$Z
result=GraphEncoder(edge,Y);
result$Z
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(edge,Y);
result$Z
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result$Z
result=GraphEncoder(edge,Y);
Z=result$Z
View(Z)
View(Z)
View(Z)
View(Z)
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(edge,Y);
Z=result$Z
Z=result$W
Z=result$Z
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(edge,Y);
Z=result$Z
Z=result$W
Z=result$W
Z=result$Z
Z=result$W
Z=result$W
View(Z)
View(Z)
Z=result$Z
Y2=c(1,2,2,1,3,3,1,2)
library(readr)
A1 <- read_csv("C:/Users/Charlie/Desktop/1t.csv",
col_names = FALSE)
View(A1)
result=GraphEncoder(A1,Y2);
result=GraphEncoder(as.matrix(A1),Y2);
result=GraphEncoder(as.matrix(A1),as.vector(Y2);
result=GraphEncoder(as.matrix(A1),as.vector(Y2));
result=GraphEncoder(as.matrix(A1),as.matrix(Y2));
Z=result$Z
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(as.matrix(A1),as.matrix(Y2));
Z=result$Z
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(as.matrix(A1),as.matrix(Y2));
Z=result$Z
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(as.matrix(A1),as.matrix(Y2));
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(as.matrix(A1),as.matrix(Y2));
library(readr)
edge <- read_csv("C:/Users/Charlie/Desktop/1t.csv",
col_names = FALSE)
View(edge)
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(as.matrix(A1),as.matrix(Y2));
Z=result$Z
result=GraphEncoder(as.matrix(edge),as.matrix(Y2));
Z=result$Z
result=GraphEncoder(as.matrix(edge),as.matrix(Y2));
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(as.matrix(edge),as.matrix(Y2));
Z=result$Z
result=GraphEncoder(as.matrix(A1),as.matrix(Y2));
Z=result$Z
result=GraphEncoder(as.matrix(edge),as.matrix(Y2));
Z=result$Z
cbind(1:3;1:3)
cbind(1:3,1:3)
cbind(1:3,1:3,1)
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(as.matrix(edge),as.matrix(Y2));
Z=result$Z
result=GraphEncoder(as.matrix(A1),as.matrix(Y2));
Z=result$Z
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(as.matrix(A1),as.matrix(Y2));
Z=result$Z1
result=GraphEncoder(as.matrix(edge),as.matrix(Y2));
result=GraphEncoder(as.matrix(A1),as.matrix(Y2));
Z1=result$Z
result=GraphEncoder(as.matrix(edge),as.matrix(Y2));
Z2=result$Z
View(Z1)
View(Z1)
View(Z2)
View(Z2)
result=GraphEncoder(as.matrix(edge),as.matrix(Y2));
Z2=result$Z
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(as.matrix(A1),as.matrix(Y2));
Z1=result$Z;
result=GraphEncoder(as.matrix(edge),as.matrix(Y2));
Z2=result$Z;
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(as.matrix(A1),as.matrix(Y2));
Z1=result$Z;
result=GraphEncoder(as.matrix(edge),as.matrix(Y2));
Z2=result$Z;
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(as.matrix(A1),as.matrix(Y2));
Z1=result$Z;
result=GraphEncoder(as.matrix(edge),as.matrix(Y2));
Z2=result$Z;
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(as.matrix(A1),as.matrix(Y2));
Z1=result$Z;
result=GraphEncoder(as.matrix(edge),as.matrix(Y2));
Z2=result$Z;
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(as.matrix(A1),as.matrix(Y2));
Z1=result$Z;
result=GraphEncoder(as.matrix(edge),as.matrix(Y2));
Z2=result$Z;
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(as.matrix(A1),as.matrix(Y2));
Z1=result$Z;
result=GraphEncoder(as.matrix(edge),as.matrix(Y2));
Z2=result$Z;
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(as.matrix(A1),as.matrix(Y2));
Z1=result$Z;
result=GraphEncoder(as.matrix(edge),as.matrix(Y2));
Z2=result$Z;
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(as.matrix(A1),as.matrix(Y2));
Z1=result$Z;
result=GraphEncoder(as.matrix(edge),as.matrix(Y2));
Z2=result$Z;
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(as.matrix(A1),as.matrix(Y2));
Z1=result$Z;
result=GraphEncoder(as.matrix(edge),as.matrix(Y2));
Z2=result$Z;
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(as.matrix(A1),as.matrix(Y2));
Z1=result$Z;
result=GraphEncoder(as.matrix(edge),as.matrix(Y2));
Z2=result$Z;
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(as.matrix(A1),as.matrix(Y2));
Z1=result$Z;
result=GraphEncoder(as.matrix(edge),as.matrix(Y2));
Z2=result$Z;
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(as.matrix(A1),as.matrix(Y2));
Z1=result$Z;
result=GraphEncoder(as.matrix(edge),as.matrix(Y2));
Z2=result$Z;
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(as.matrix(A1),as.matrix(Y2));
Z1=result$Z;
result=GraphEncoder(as.matrix(edge),as.matrix(Y2));
Z2=result$Z;
D=as.vector(max(rowSums(edge),1)^-(0.5));
D
D=as.vector(max(rowSums(as.matrix(A1)),1)^-(0.5));
D
D=diag(as.vector(max(rowSums(as.matrix(A1)),1)%^%-(0.5)),8,8);
D=diag(as.vector(max(rowSums(as.matrix(A1)),1)^-(0.5)),8,8);
View(D)
View(D)
View(D)
rowSums(as.matrix(A1))
max(rowSums(as.matrix(A1)),1)
D=as.vector(pmax(rowSums(as.matrix(A1)),1)^-(0.5))
D
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(as.matrix(A1),as.matrix(Y2));
Z1=result$Z;
result=GraphEncoder(as.matrix(edge),as.matrix(Y2));
Z2=result$Z;
edge=as.matrix(cora_edges)
result=GraphEncoder(as.matrix(edge),as.matrix(Y));
Z2=result$Z;
View(edge)
View(Y)
result=GraphEncoder(as.matrix(edge),as.matrix(Y));
Z2=result$W;
result=GraphEncoder(as.matrix(edge),as.matrix(Y));
Z2=result$Z;
result=GraphEncoder(as.matrix(edge),as.matrix(Y));
Z2=result$Z;
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(as.matrix(edge),as.matrix(Y));
Z2=result$Z;
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(as.matrix(edge),as.matrix(Y));
Z2=result$Z;
matrix(sample(3,10,rep=T), n, 1)
matrix(sample(3,10,rep=T), 10, 1)
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(as.matrix(edge),7);
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(as.matrix(A1),2);
result=GraphEncoder(as.matrix(A1),2)
result=GraphEncoder(as.matrix(A1),Y2);
result=GraphEncoder(as.matrix(A1),as.matrix(Y2));
length(2)
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(as.matrix(A1),2);
result=GraphEncoder(A1,2);
result=GraphEncoder(as.matrix(edge),7);
result=GraphEncoder(as.matrix(edge),7);
source('C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R')
result=GraphEncoder(as.matrix(edge),7);
result=GraphEncoder(as.matrix(A1),2);
result=GraphEncoder(as.matrix(cora_edges),3);
