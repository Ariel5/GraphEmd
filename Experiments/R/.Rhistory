suppressMessages(require(igraph))
suppressMessages(require(leiden))
suppressMessages(require(R.matlab))
Z=readMat("C:/Work/Applications/GraphNN/Data/Matlab/lastFM.mat");
Z=readMat("C:/Work/Applications/GraphNN/Data/Matlab/lastfm.mat");
Z=readMat("C:/Work/Applications/Github/GraphNN/Data/Matlab/lastfm.mat");
Edge=Z$Edge;
max(max(Edge))
Z=readMat("C:/Work/Applications/Github/GraphNN/Data/Matlab/lastfm.mat");
Edge=Z$Edge;
A=graph_from_edgelist(Edge[,1:2]);
Y=leiden(A,resolution_parameter=1,n_iterations=5);
max(max(Y))
Y=leiden(A,resolution_parameter=10,n_iterations=5);
max(max(Y))
Y=leiden(A,resolution_parameter=0.1,n_iterations=5);
max(max(Y))
Y=leiden(A,resolution_parameter=0,n_iterations=5);
Y=leiden(A,resolution_parameter=0,n_iterations=5);
max(max(Y))
Y=leiden(A,resolution_parameter=0.1,n_iterations=5);
max(max(Y))
Y=leiden(A,resolution_parameter=1,n_iterations=5);
max(max(Y))
max(max(Y))
max(max(Y))
Y=leiden(A,resolution_parameter=5,n_iterations=5);
max(max(Y))
Z=readMat("C:/Work/Applications/Github/GraphNN/Data/Matlab/lastfm.mat");
Edge=Z$Edge;
A=graph_from_edgelist(Edge[,1:2]);
Y1=leiden(A,resolution_parameter=0.1,n_iterations=5);
Y2=leiden(A,resolution_parameter=0.5,n_iterations=5);
Y3=leiden(A,resolution_parameter=1,n_iterations=5);
Y4=leiden(A,resolution_parameter=2,n_iterations=5);
Y5=leiden(A,resolution_parameter=5,n_iterations=5);
max(Y1)
max(Y2)
max(Y3)
max(Y4)
max(Y5)
YL=c(Y1,Y2,Y3,Y4,Y5);
YL=c(Y1;Y2;Y3;Y4;Y5);
YL=r(Y1;Y2;Y3;Y4;Y5);
YL=r(Y1,Y2,Y3,Y4,Y5);
YL=rbind(Y1,Y2,Y3,Y4,Y5);
write.csv(Y1,"C:/Work/Applications/GitHub/PhoneL.csv", row.names = FALSE)
write.csv(YL,"C:/Work/Applications/GitHub/PhoneL.csv", row.names = FALSE)
Z=readMat("C:/Work/Applications/Github/GraphNN/Data/Matlab/polBlogs.mat");
Edge=Z$Edge;
A=graph_from_edgelist(Edge[,1:2]);
Y1=leiden(A,resolution_parameter=0.1,n_iterations=5);
Y2=leiden(A,resolution_parameter=0.5,n_iterations=5);
Y3=leiden(A,resolution_parameter=1,n_iterations=5);
Y4=leiden(A,resolution_parameter=2,n_iterations=5);
Y5=leiden(A,resolution_parameter=5,n_iterations=5);
YL=rbind(Y1,Y2,Y3,Y4,Y5);
write.csv(YL,"C:/Work/Applications/GitHub/GraphNN/Data/Matlab/tmpL.csv", row.names = FALSE)
Z=readMat("C:/Work/Applications/Github/GraphNN/Data/Matlab/CoraAdj.mat");
Edge=Z$Edge;
A=graph_from_edgelist(Edge[,1:2]);
Y1=leiden(A,resolution_parameter=0.1,n_iterations=5);
Y2=leiden(A,resolution_parameter=0.5,n_iterations=5);
Y3=leiden(A,resolution_parameter=1,n_iterations=5);
Y4=leiden(A,resolution_parameter=2,n_iterations=5);
Y5=leiden(A,resolution_parameter=5,n_iterations=5);
YL=rbind(Y1,Y2,Y3,Y4,Y5);
write.csv(YL,"C:/Work/Applications/GitHub/GraphNN/Data/Matlab/tmpL.csv", row.names = FALSE)
Z=readMat("C:/Work/Applications/Github/GraphNN/Data/Matlab/CoraAdj.mat");
Edge=Z$Edge;
A=graph_from_edgelist(Edge[,1:2]);
Y1=leiden(A,resolution_parameter=0.1,n_iterations=5);
Y2=leiden(A,resolution_parameter=0.5,n_iterations=5);
Y3=leiden(A,resolution_parameter=1,n_iterations=5);
Y4=leiden(A,resolution_parameter=2,n_iterations=5);
Y5=leiden(A,resolution_parameter=5,n_iterations=5);
YL=rbind(Y1,Y2,Y3,Y4,Y5);
write.csv(YL,"C:/Work/Applications/GitHub/GraphNN/Data/Matlab/tmpL.csv", row.names = FALSE)
Z=readMat("C:/Work/Applications/Github/GraphNN/Data/Matlab/pubmedAdj.mat");
Edge=Z$Edges;
A=graph_from_edgelist(Edge[,1:2]);
Y1=leiden(A,resolution_parameter=0.1,n_iterations=5);
Y2=leiden(A,resolution_parameter=0.5,n_iterations=5);
Y3=leiden(A,resolution_parameter=1,n_iterations=5);
Y4=leiden(A,resolution_parameter=2,n_iterations=5);
Z=readMat("C:/Work/Applications/Github/GraphNN/Data/Matlab/pubmedAdj.mat");
Z=readMat("C:/Work/Applications/Github/GraphNN/Data/Matlab/email.mat");
Edge=Z$Edges;
A=graph_from_edgelist(Edge[,1:2]);
Y1=leiden(A,resolution_parameter=0.1,n_iterations=5);
Y2=leiden(A,resolution_parameter=0.5,n_iterations=5);
Z=readMat("C:/Work/Applications/Github/GraphNN/Data/Matlab/email.mat");
Edge=Z$Edge;
A=graph_from_edgelist(Edge[,1:2]);
Y1=leiden(A,resolution_parameter=0.1,n_iterations=5);
Y2=leiden(A,resolution_parameter=0.5,n_iterations=5);
Y3=leiden(A,resolution_parameter=1,n_iterations=5);
Y4=leiden(A,resolution_parameter=2,n_iterations=5);
Y5=leiden(A,resolution_parameter=5,n_iterations=5);
YL=rbind(Y1,Y2,Y3,Y4,Y5);
write.csv(YL,"C:/Work/Applications/GitHub/GraphNN/Data/Matlab/tmpL.csv", row.names = FALSE)
devtools::install_github('kharchenkolab/leidenAlg', build_vignettes = TRUE)
install.packages("leidenAlg")
suppressMessages(require(igraph))
#suppressMessages(require(leiden))
suppressMessages(require(leidenAlg))
suppressMessages(require(R.matlab))
Z=readMat("C:/Work/Applications/GitHub/Phone.mat");
Edge=Z$Edge;
A=graph_from_edgelist(Edge[,1:2]);
#Z=cluster_leiden(A,weights=Edge[,3]);
YL=leiden.community(A,edge_weights=Edge[,3]);
Z=readMat("C:/Work/Applications/GitHub/Phone.mat");
Edge=Z$Edge;
A=graph_from_edgelist(Edge[,1:2]);
#Z=cluster_leiden(A,weights=Edge[,3]);
YL=leiden.community(A,Edge_weights=Edge[,3]);
YL=leiden.community(A)
YL=YL$membership
YL=as.vector(YL)
YL=t(YL);
source("C:/Program Files/R/RWork/GraphEncoder.R")
GraphEncoder(Z$Edge,YL);
GraphEncoder(Z$Edge,t(YL));
source("C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R")
install.packages("mclust")
install.packages("wordspace")
source("C:/Work/Applications/GitHub/GraphNN/Main/GraphEncoder.R")
GraphEncoder(Z$Edge,t(YL));
GraphEncoder(Z$Edge,YL);
View(GraphEncoder)
GraphEncoder(Z$Edge,Z$YL);
GraphEncoder(Z$Edge,numeric(YL));
GraphEncoder(Z$Edge,as.numeric(YL));
GraphEncoder(Z$Edge,t(as.numeric(YL)));
t(as.numeric(YL))
View(YL)
